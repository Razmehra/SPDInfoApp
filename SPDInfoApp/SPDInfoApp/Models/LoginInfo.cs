//using System;
//using System.Collections.Generic;
//using System.Text;

//namespace SPDInfoApp.Models
//{
//    public class LoginInfo
//    {
//        public string LoginType { get; set; }
//        public string UserName { get; set; }
//        public string Password { get; set; }

//        public int MPIN { get; set; }
//        public string Mobile { get; set; }
//        public string Email { get; set; }
//        public string ApplicationId { get; set; }

//    }
//}
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SPDInfoApp.Models;
//
//    var loginInfo = LoginInfo.FromJson(jsonString);

namespace SPDInfoApp.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using SPDInfoApp.HelperClasses;
    using static SPDInfoApp.HelperClasses.ParseStringConverter;
    using static SPDInfoApp.HelperClasses.Utils;

    //public partial class LoginInfo
    //{
    //    [JsonProperty("LoginType")]
    //    public string LoginType { get; set; }

    //    [JsonProperty("UserName")]
    //    public string UserName { get; set; }

    //    [JsonProperty("Password")]
    //    public string Password { get; set; }

    //    [JsonProperty("MPIN")]
    //    public long Mpin { get; set; }

    //    [JsonProperty("Mobile")]
    //    public string Mobile { get; set; }

    //    [JsonProperty("Email")]
    //    public string Email { get; set; }

    //    [JsonProperty("ApplicationId")]
    //    [JsonConverter(typeof(ParseStringConverter))]
    //    public string ApplicationId { get; set; }
    //}

    //public partial class LoginInfo
    //{
    //    public static LoginInfo[] FromJson(string json) => JsonConvert.DeserializeObject<LoginInfo[]>(json, Converter1.Settings1);
    //}

    //public static class SerializeLoginInfo
    //{
    //    public static string ToJson(this LoginInfo[] self) => JsonConvert.SerializeObject(self, Converter1.Settings1);
    //}

    //internal static class Converter1
    //{
    //    public static readonly JsonSerializerSettings Settings1 = new JsonSerializerSettings
    //    {
    //        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
    //        DateParseHandling = DateParseHandling.None,
    //        Converters =
    //        {
    //            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
    //        },
    //    };
    //}

    //internal class ParseStringConverter : JsonConverter
    //{
    //    public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

    //    public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
    //    {
    //        if (reader.TokenType == JsonToken.Null) return null;
    //        var value = serializer.Deserialize<string>(reader);
    //        long l;
    //        if (Int64.TryParse(value, out l))
    //        {
    //            return l;
    //        }
    //        throw new Exception("Cannot unmarshal type long");
    //    }

    //    public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
    //    {
    //        if (untypedValue == null)
    //        {
    //            serializer.Serialize(writer, null);
    //            return;
    //        }
    //        var value = (long)untypedValue;
    //        serializer.Serialize(writer, value.ToString());
    //        return;
    //    }

    //    public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    //}
    public class LoginInfo
    {

        [JsonProperty("LoginType")]
        public string LoginType { get; set; }

        [JsonProperty("UserName")]
        public string UserName { get; set; }

        [JsonProperty("Password")]
        public string Password { get; set; }

        [JsonProperty("MPIN")]
        public int MPIN { get; set; }

        [JsonProperty("Mobile")]
        public string Mobile { get; set; }

        [JsonProperty("Email")]
        public string Email { get; set; }

        [JsonProperty("ApplicationId")]
        public string ApplicationId { get; set; }

        [JsonProperty("StudentFeedback")]
        public List<StudentFeedbackModel> StudentFeedback { get; set; }

        [JsonProperty("AlumniFeedback")]
        public List<AlumniFeedbackModel> AlumniFeedback { get; set; }

        [JsonProperty("SFB")]
        public string SFB { get; set; }

        [JsonProperty("EntryData")]
        public SPDInfo EntryData { get; set; }
    }

    public class LoginInfos
    {

        [JsonProperty("LoginInfo")]
        public IList<LoginInfo> LoginInfo { get; set; }
    }
}
